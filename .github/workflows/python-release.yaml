name: Build, release, publish

on:
  workflow_call:
    inputs:
      git-ref:
        description: 'Git reference to check out before building'
        type: string
        default: ''
      python-version:
        description: 'Python version to use for building and distributing'
        type: string
        default: '3.11'
      cache:
        description: 'Passed to `actions/setup-python`'
        type: string
        default: 'pip'
      cache-dependency-path:
        description: 'Passed to `actions/setup-python`'
        type: string
        default: 'pyproject.toml'
      build-command:
        description: 'Command to execute to build distributable'
        type: string
        default: 'python -m build'
      build-requirements:
        description: 'The command `pip install <build-requirements>` is executed before building, unless this is empty'
        type: string
        default: 'build==0.10.0'
      tag-as-release-title:
        description: 'If `true` (default), the tag itself becomes the release title and 
                      the entire tag message including the subject becomes the release body.
                      If `false`, the tag subject becomes the release title and
                      the rest of the message becomes the body.'
        type: boolean
        default: true
      prerelease:
        description: 'Set to `true` to create a prerelease, to `false` to create a normal release, or
                      `auto` (default) to create a prerelease, if the tag name matches the `prerelease-pattern`.'
        type: string
        default: 'auto'
      prerelease-pattern:
        description: 'If the tag name matches this pattern, it would be inferred to be a prerelease'
        type: string
        default: 'v*.*.*-*'
      publish-verbose:
        description: 'Whether to show verbose output during the publishing step'
        type: boolean
        default: false
      pypi-repository-url:
        description: 'The repository (package index) URL to upload the package to'
        type: string
        default: 'https://upload.pypi.org/legacy/'
    secrets:
      release-token:
        description: 'Github API token to use to create the release; if omitted, the release step is skipped.'
        required: false
      publish-token:
        description: 'PyPI API token to use to publish the package; if omitted, the publish job is skipped.'
        required: false

jobs:
  check-secrets:
    name: Checking secrets
    runs-on: ubuntu-latest
    steps:
      - id: release-token-check
        run: |
          if [[ "${{ secrets.release-token }}" != '' ]]; then
            echo "provided=true" >> $GITHUB_OUTPUT;
          else
            echo "provided=false" >> $GITHUB_OUTPUT;
          fi
      - id: publish-token-check
        run: |
          if [[ "${{ secrets.publish-token }}" != '' ]]; then
            echo "provided=true" >> $GITHUB_OUTPUT;
          else
            echo "provided=false" >> $GITHUB_OUTPUT;
          fi
    outputs:
      release-token-provided: ${{ steps.release-token-check.outputs.provided }}
      publish-token-provided: ${{ steps.publish-token-check.outputs.provided }}

  build:
    name: Creating release
    needs: check-secrets
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.git-ref }}

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.cache }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Install build dependencies
      if: ${{ inputs.build-requirements != '' }}
      run: |
        pip install -U pip
        pip install ${{ inputs.build-requirements }}

    - name: Build distributable
      run: ${{ inputs.build-command }}

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*

    - name: Create release on Github
      id: tag-to-release
      if: ${{ needs.check-secrets.outputs.release-token-provided == 'true' }}
      uses: spenserblack/actions-tag-to-release@v2.0.0
      with:
        token: ${{ secrets.release-token }}
        tag-as-title: ${{ inputs.tag-as-release-title }}
        prerelease: ${{ inputs.prerelease }}
        prerelease-pattern: ${{ inputs.prerelease-pattern }}

    outputs:
      prerelease: ${{ steps.tag-to-release.outputs.prerelease }}

  publish:
    name: Publishing package
    needs:
      - check-secrets
      - build
    if: ${{ needs.check-secrets.outputs.publish-token-provided == 'true' && needs.build.outputs.prerelease == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          repository-url: ${{ inputs.pypi-repository-url }}
          password: ${{ secrets.publish-token }}
          verbose: ${{ secrets.publish-verbose }}
