name: Build, release and publish

on:
  workflow_call:
    inputs:
      git-ref:
        description: 'Git reference to check out before building'
        type: string
        default: ''
      python-version:
        description: 'Python version to use for building and distributing'
        type: string
        default: '3.11'
      cache:
        description: 'Passed to `actions/setup-python`'
        type: string
        default: 'pip'
      cache-dependency-path:
        description: 'Passed to `actions/setup-python`'
        type: string
        default: 'pyproject.toml'
      build-command:
        description: 'Command to execute to build distributable'
        type: string
        default: 'python -m build'
      build-requirements:
        description: 'The command `pip install <build-requirements>` is executed before building, unless this is empty'
        type: string
        default: 'build==0.10.0'
    secrets:
      release-token:
        description: 'Github API token to use to create the release'
        required: true
      publish-token:
        description: 'PyPI API token to use to publish the package'
        required: true

jobs:
  build:
    name: Build release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.git-ref }}

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: ${{ inputs.cache }}
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Install build dependencies
      if: ${{ inputs.build-requirements != '' }}
      run: |
        pip install -U pip
        pip install ${{ inputs.build-requirements }}

    - name: Build distributable
      run: ${{ inputs.build-command }}

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*

    - name: Create release on Github
      id: tag-to-release
      uses: spenserblack/actions-tag-to-release@v2.0.0
      with:
        token: ${{ secrets.release-token }}
        tag-as-title: true
        prerelease: auto

    outputs:
      prerelease: ${{ steps.tag-to-release.outputs.prerelease }}

  publish:
    name: Publish to package index
    needs: build
    if: ${{ needs.build.outputs.prerelease == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.5
        with:
          password: ${{ secrets.publish-token }}
